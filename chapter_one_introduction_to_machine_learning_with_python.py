# -*- coding: utf-8 -*-
"""chapter_one_introduction_to_machine_learning_with_python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yg7wHafeY21_EJ8cuhthdvZXqE-o69Hg
"""

import sys
import pandas as pd
import matplotlib
import numpy as np
import scipy as sp
import IPython 
import sklearn
from pandas.plotting import scatter_matrix

from sklearn.datasets import load_iris

iris_dataset = load_iris()

print(f'Keys from dataset: {iris_dataset.keys()}')

print(iris_dataset['DESCR'][:193] + '\n...')

print(f"target_names: {iris_dataset['target_names']}")

print(f"Feature_names: {iris_dataset['feature_names']}")

print(f"Shape of data: {iris_dataset['data'].shape}")

print(f"First five columns of data:\n {iris_dataset['data'][:5]}")

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(iris_dataset['data'], iris_dataset['target'], random_state=0)

iris_dataframe = pd.DataFrame(X_train, columns=iris_dataset.feature_names)

grr = pd.plotting.scatter_matrix(iris_dataframe, c=y_train, figsize=(15, 15), marker='o', hist_kwds={'bins': 20}, s=60, alpha=.8, cmap=mglearn.cm3)

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=1)

knn.fit(X_train, y_train)

X_new = np.array([[5, 2.9, 1, 0.2]])
print(f"X_new.shape: {X_new.shape}")

prediction = knn.predict(X_new)
print(f"Prediction: {prediction}")
print(f"Predicted target name: {iris_dataset['target_names'][prediction]}")

y_pred = knn.predict(X_test)
print(f"Test set prediction: {y_pred}")

print(f"Test set score: {np.mean(y_pred == y_test):.2f}")

print(f"Test set score: {knn.score(X_test, y_test):.2f}")